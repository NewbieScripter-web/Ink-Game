--Wow! this time its not a ac bypass, now with many features! cool right? heh...
local ob,Db,Ya,Eb,Bb,xa=type,pairs,bit32.bxor,getmetatable;local o,Lb,Ra,u,ua,rb,d,r,Pa,M,p,ta,Ia,Ba,Fb,B,ka,h,Hb,A,vb Ia={}r=(getfenv());M,d,Ra=(string.char),(string.byte),(bit32 .bxor);Ba=function(Jb,S)local la,V,R,J V={}la,R={},function(Ob,F,q)la[Ob]=Ya(F,34874)-Ya(q,14536)return la[Ob]end J=la[29227]or R(29227,120585,23724)repeat while true do if J<=34621 then if J>19708 then if J>30447 then if J<=33172 then V[1]=V[1]+V[2];V[3]=V[1];if V[1]~=V[1]then J=34381 else J=26513 end else return V[4]end else if(V[2]>=0 and V[1]>V[5])or((V[2]<0 or V[2]~=V[2])and V[1]<V[5])then J=la[-21375]or R(-21375,30238,20255)else J=la[12203]or R(12203,67661,41815)end end else V[3]=V[1];if V[5]~=V[5]then J=la[15835]or R(15835,19602,1683)else J=26513 end end elseif J<=61395 then V[4]=V[4]..M(Ra(d(Jb,(V[3]-5)+1),d(S,(V[3]-5)%#S+1)))J=la[25326]or R(25326,113085,35939)else V[4]='';V[1],V[5],V[2]=5,(#Jb-1)+5,1 J=la[-32685]or R(-32685,41259,11693)end end until J==58060 end;Fb=(select);Pa=(function(...)return{[1]={...},[2]=Fb('#',...)}end);o=((function()local function cb(Ta,m,zb)if m>zb then return end return Ta[m],cb(Ta,m+1,zb)end return cb end)());p,rb=(string.gsub),(string.char);B=(function(b)b=p(b,'[^ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=]','')return(b:gsub('.',function(Ja)if(Ja=='=')then return''end local ja,lb='',(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'):find(Ja)-1)for sa=6,1,-1 do ja=ja..(lb%2^sa-lb%2^(sa-1)>0 and'1'or'0')end return ja;end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(j)if(#j~=8)then return''end local Wa=0 for xb=1,8 do Wa=Wa+(j:sub(xb,xb)=='1'and 2^(8-xb)or 0)end return rb(Wa)end))end);ua,A,ka,Lb,ta,Hb,u,h=r[Ba('|Y%fC0','\15-W')][Ba('\30d\128\ni\155','k\n\240')],r[Ba('uSGoIR',"\6\'\53")][Ba('\210\212\195','\161')],r[Ba('#/\154\57\53\143','P[\232')][Ba('\219\174\205\178','\185\215')],r[Ba('\21\147\3\201E','w\250')][Ba(']D{XQg','17\19')],r[Ba('\201\f\223V\153','\171e')][Ba('\2\188\243\25\169\239','p\207\155')],r[Ba("+\'=}{",'IN')][Ba('\185\238\181\235','\219\143')],r[Ba('\n\181\28\184\27','~\212')][Ba('A\21eA\27\127','\"z\v')],{};vb=(function(c)local jb,Sa,pa,_b _b={}pa,Sa={},function(ea,Ma,Cb)pa[ea]=Ya(Ma,57302)-Ya(Cb,33429)return pa[ea]end jb=pa[27573]or Sa(27573,117835,20729)repeat while true do if jb<=30535 then if jb<=10764 then if _b[1]<=#c then jb=59348 else jb=pa[-19133]or Sa(-19133,117312,23141)end elseif jb<=17877 then if jb<=15618 then if jb>15036 then _b[2]=u(_b[3]);h[c]=_b[2]return _b[2]else _b[4]=_b[4]+_b[5];_b[6]=_b[4];if _b[4]~=_b[4]then jb=pa[-11128]or Sa(-11128,36414,53810)else jb=pa[20486]or Sa(20486,12538,7872)end end elseif jb>16667 then _b[7]=h[c];if _b[7]then jb=pa[-19896]or Sa(-19896,114897,9791)break end jb=42673 else _b[3][#_b[3]+1]=_b[8]_b[9]=A(_b[9].._b[8],-_b[10])jb=pa[11781]or Sa(11781,22248,54014)end else if(_b[5]>=0 and _b[4]>_b[11])or((_b[5]<0 or _b[5]~=_b[5])and _b[4]<_b[11])then jb=pa[-16754]or Sa(-16754,51030,38314)else jb=52757 end end elseif jb<=46037 then if jb<=38312 then if jb>34389 then _b[6]=_b[4];if _b[11]~=_b[11]then jb=pa[23454]or Sa(23454,61289,44523)else jb=pa[30290]or Sa(30290,125714,25464)end elseif jb>32045 then if not(_b[1]+1<=#c)then jb=pa[-17312]or Sa(-17312,123754,52731)break else jb=pa[-19059]or Sa(-19059,88078,21616)break end jb=pa[-17685]or Sa(-17685,10622,35791)else return _b[7]end elseif jb<=43986 then _b[10],_b[12],_b[1],_b[3],_b[9]=Lb(1,12),Lb(1,4),1,{},'';jb=321;else _b[13]=ua(Ba('\246\129\250','\200'),c,_b[1]);_b[1]=_b[1]+2 _b[14],_b[15]=#_b[9]-ta(_b[13],4),Hb(_b[13],(_b[12]-1))+3 _b[8]=A(_b[9],_b[14],_b[14]+_b[15]-1)jb=pa[10534]or Sa(10534,80844,29785)end elseif jb<=56753 then if jb>53194 then _b[8]=A(c,_b[1],_b[1])_b[1]=_b[1]+1 jb=pa[7696]or Sa(7696,78930,31907)else _b[8]=nil;if not(Hb(_b[2],1)~=0)then jb=pa[28411]or Sa(28411,1815,55894)break else jb=pa[-26850]or Sa(-26850,118126,44761)break end jb=pa[-18068]or Sa(-18068,72022,23463)end elseif jb<=59869 then if jb<=59168 then if _b[1]<=#c then jb=pa[11791]or Sa(11791,119726,47213)break end jb=pa[13140]or Sa(13140,84878,9631)else _b[2]=ka(c,_b[1]);_b[1]=_b[1]+1 _b[5],_b[11],_b[4]=1,(8)+27,28 jb=37454 end else _b[2]=ta(_b[2],1)if _b[8]then jb=pa[12561]or Sa(12561,120471,19118)break end jb=pa[-12971]or Sa(-12971,40802,34164)end end until jb==21144 end);local K,Z,ca,i,yb,Oa,eb,z,ia,Q,N,bb,Ua,na,v,ib,mb,Ca,da,ga,Y,tb,E,l,Ga,t,ha,Ka,ya=r[Ba('\149D\145X','\225=')],r[Ba('5\30$\17)','E}')],r[Ba('\162\r\181\16\181','\199\127')],r[Ba('2\198\224P+\203\235W','F\169\142%')],r[Ba('\226\31\235\230\30\236','\131l\152')],r[Ba('\197L\133\211J\157','\182)\233')],r[Ba('\254\29\241\205\136+\236\f\228\194\129:','\141x\133\160\237_')],r[Ba('Xb\180Bx\161','+\22\198')][Ba('\24\136\152\19\134\158','~\231\234')],r[Ba('\187Jk\161P~','\200>\25')][Ba('\200w\188\220z\167','\189\25\204')],r[Ba('\3\130\164\25\152\177','p\246\214')][Ba('PVA','#')],r[Ba('\159\236|\133\246i','\236\152\14')][Ba('\v:\29&','iC')],r[Ba('\158\219w\132\193b','\237\175\5')][Ba('\151\243\149\233','\244\155')],r[Ba('y\204o\193h','\r\173')][Ba('XzCp','5\21')],r[Ba('\31\158\t\147\14','k\255')][Ba('\141\168\158\162','\253\201')],r[Ba('\177\198\167\203\160','\197\167')][Ba('\213\176A\215\182A','\182\194$')],r[Ba('\161\5\183\b\176','\213d')][Ba('\29)\231\17\53\224','tG\148')],r[Ba('\2\27\20\22\19','vz')][Ba('\143N\182\143@\172','\236!\216')],r[Ba('pG\211Ff\\\200Gv','\19(\161)')][Ba('\23\180\190\21\178\190','t\198\219')],r[Ba('BD\96\57T_{8D','!+\18V')][Ba('\216\249\196\252\197','\161\144')],r[Ba('\198\128\162\48\208\155\185\49\192','\165\239\208_')][Ba('\182T^\177\\H','\196\49-')],r[Ba('\167w\141\155\177l\150\154\161','\196\24\255\244')][Ba('\137\195\133\220\143','\234\175')],r[Ba('\213\146\195\200\133','\183\251')][Ba('\25\20\t','{')],r[Ba('\169n\191\52\249','\203\a')][Ba('HOEE','*7')],r[Ba('!\142\55\212q','C\231')][Ba('\227.\239+','\129O')],r[Ba('tyb#$','\22\16')][Ba(':\143=\136,','X\251')],r[Ba('\132~\146$\212','\230\23')][Ba('5\227\172.\246\176','G\144\196')],r[Ba('8\146.\200h','Z\251')][Ba('N^\160KK\188','\"-\200')],r[Ba('>*(pn','\\C')][Ba('\165f\167\178\127\176\180','\192\30\211')],{[59218]={},[5513]={{7,4,false},{7,7,true},{5,0,true},{5,5,true},{9,10,true},{10,8,true},{10,0,false},{10,8,true},{10,0,false},{7,4,false},{7,2,false},{10,4,true},{7,7,true},{9,7,true},{10,2,true},{7,4,false},{5,0,false},{7,5,true},{4,3,true},{1,8,true},{1,6,true},{4,5,false},{5,8,false},{7,10,false},{7,10,false},{10,3,true},{4,5,false},{10,4,false},{4,2,false},{7,6,false},{1,2,false},{9,8,true},{10,4,true},{4,8,true},{1,0,false},{9,10,true},{1,6,true},{9,3,false},{7,0,false},{9,2,false},{10,8,false},{7,4,false},{10,5,false},{7,4,false},{5,0,false},{4,3,false},{9,2,true},{1,4,true},{4,8,false},{7,4,false},{10,0,false},{7,4,false},{4,0,false},{9,2,true},{7,7,true},{7,4,false},{5,7,false},{7,4,false},{5,0,false},{4,4,true},{7,4,false},{7,4,false},{1,0,true},{10,3,true},{7,4,false},{7,4,false},{5,3,false},{10,4,false},{7,4,false},{10,8,true},{1,4,false},{1,10,true},{7,7,true},{7,2,false},{7,4,false},{7,7,false},{1,4,false},{9,7,false},{9,4,false},{7,7,true},{7,4,true},{7,6,false},{10,4,true},{9,5,true},{4,4,true},{9,8,true},{10,4,true},{7,4,false},{9,3,false},{1,8,false},{7,4,false},{9,4,true},{9,0,false},{5,7,false},{10,4,false},{9,10,true},{9,4,false},{4,3,false},{10,5,true},{1,5,false},{5,2,true},{1,6,false},{7,6,false},{7,7,true},{4,6,true},{10,0,true},{5,4,true},{10,4,false},{7,8,true},{5,2,true},{1,4,false},{7,0,false},{5,6,true},{5,8,true},{10,6,true},{7,4,false},{1,2,true},{10,4,false},{10,4,true},{7,10,false},{9,10,false},{9,3,false},{10,4,true},{10,4,false},{4,3,false},{9,8,true},{5,0,false},{1,5,false},{1,8,false},{1,10,false},{10,5,true},{1,4,false},{7,4,false},{5,3,false},{10,4,false},{7,4,false},{7,4,false},{1,8,true},{7,0,false},{7,4,false},{7,4,false},{7,4,false},{7,2,true},{7,4,false},{9,7,false},{7,6,false},{9,8,true},{10,0,false},{5,2,true},{5,2,true},{7,5,false},{4,4,true},{4,10,true},{4,4,false},{7,6,false},{5,3,false},{7,2,false},{10,3,true},{9,7,false},{9,5,true},{5,7,true},{1,3,true},{4,7,true},{4,4,false},{9,0,false},{9,7,true},{4,7,false},{9,0,true},{10,3,true},{7,2,true},{1,10,true},{7,4,false},{7,4,false},{10,0,true},{9,9,false},{9,4,true},{9,10,true},{4,8,false},{7,2,false},{7,4,true},{9,4,true},{7,4,false},{10,8,false},{10,3,true},{9,4,true},{1,5,false},{7,4,false},{1,10,true},{1,0,false},{10,4,false},{5,4,true},{5,7,true},{10,5,true},{10,4,false},{7,1,false},{10,4,true},{9,4,true},{4,7,true},{9,4,false},{10,4,false},{7,7,true},{7,4,false},{7,3,false},{9,3,true},{9,5,false},{7,2,true},{5,5,true},{7,4,false},{10,4,false},{7,2,false},{10,10,true},{5,6,false},{10,6,false},{10,6,true},{10,2,false},{1,10,false},{5,7,false},{7,7,true},{7,7,true},{7,4,true},{7,3,true},{7,1,false},{9,5,false},{7,4,true},{7,0,false},{9,5,false},{9,4,true},{7,4,false},{10,0,false},{1,4,false},{1,0,false},{5,2,true},{4,10,true},{1,6,true},{9,3,false},{4,7,false},{4,8,true},{7,4,false},{10,3,false},{1,4,true},{10,4,false},{4,10,false},{5,4,false},{7,10,false},{5,4,true},{10,6,true},{10,3,true},{7,1,false},{5,3,true},{10,4,false},{5,4,true},{7,7,true},{7,6,false},{4,4,true},{4,8,false},{7,4,false}},[16518]={}}local function Za(ub)local T=ya[59218][ub]if not(T)then else return T end local ra,fb=ub,1 local function Qa()local D,y,f,I D={}I,y={},function(w,Aa,H)I[w]=Ya(Aa,25164)-Ya(H,52003)return I[w]end f=I[-19506]or y(-19506,89043,40316)repeat while true do if f<=33365 then if f>17296 then if f>25685 then if f>29536 then if f<=31463 then if f<=30011 then if f<=29861 then D[1][17803]=l(t(D[2],8),255)D[1][65032]=l(t(D[2],16),255)D[1][8290]=l(t(D[2],24),255)f=I[-6415]or y(-6415,34411,63888)else D[3]=D[4]f=I[13371]or y(13371,7323,50139)end else D[5]=D[5]+D[6];D[7]=D[5];if D[5]~=D[5]then f=I[31607]or y(31607,7792,37454)else f=57389 end end elseif f>32879 then if f<=33043 then D[8]=if D[9]<8388608 then D[9]else D[9]-16777216 f=I[-16125]or y(-16125,73644,31324)break else D[7]=D[5];if D[10]~=D[10]then f=8911 else f=I[-23270]or y(-23270,34480,53228)end end else if(D[5]>=0 and D[11]>D[3])or((D[5]<0 or D[5]~=D[5])and D[11]<D[3])then f=I[-31415]or y(-31415,77595,46015)else f=I[7526]or y(7526,94437,14261)end end elseif f>27574 then if f>28713 then D[12],D[13]=D[14],nil;f=23061;else D[2]=D[2]+D[15];D[16]=D[2];if D[2]~=D[2]then f=I[-23739]or y(-23739,36031,19963)else f=55201 end end elseif f<=26322 then if f>26149 then D[17][(D[16]-69)]=Qa()f=I[21666]or y(21666,92345,22437)else if(D[17]>=0 and D[4]>D[18])or((D[17]<0 or D[17]~=D[17])and D[4]<D[18])then f=I[-8316]or y(-8316,2061,37121)else f=I[-31455]or y(-31455,82910,22489)end end else return{[13142]=D[12],[41758]=D[19],[5791]=D[17],[23390]='',[46741]=D[11],[17148]=D[20]}end elseif f>21458 then if f<=23143 then if f<=22376 then if f>21925 then if f<=22078 then if f>21983 then D[21][11251]=D[15][D[21][37963]+1]f=I[-24990]or y(-24990,36371,52554)else D[13]=E(D[19],14)f=I[1635]or y(1635,89085,18345)break end else D[5]=E(D[10],1971579984)f=I[14767]or y(14767,34451,19723)break end else D[22],D[8]=l(t(D[2],8),16777215),nil;f=I[29140]or y(29140,46724,16588);end elseif f>23075 then if D[16]==3 then f=I[9130]or y(9130,37783,61197)break elseif D[16]==10 then f=I[19519]or y(19519,90652,31433)break elseif not(D[16]==8)then f=I[21382]or y(21382,55017,20502)break else f=I[24001]or y(24001,56197,56791)break end f=I[10795]or y(10795,90542,54991)else D[19]=ia(Ba('\220','\158'),ra,fb);fb=fb+1 f=I[7106]or y(7106,63584,36729)end elseif f<=24192 then if true then f=34212 else f=11797 end elseif f>24435 then if(D[4]>=0 and D[6]>D[7])or((D[4]<0 or D[4]~=D[4])and D[6]<D[7])then f=I[19393]or y(19393,97718,620)else f=I[15292]or y(15292,43163,61114)end else D[10]=D[5];D[6]=v(D[10]);D[7]=function()local Ha,hb,kb,ab kb={}ab,hb={},function(nb,Ab,Gb)ab[nb]=Ya(Ab,10199)-Ya(Gb,3156)return ab[nb]end Ha=ab[-2467]or hb(-2467,62639,40173)repeat while true do if Ha<=32878 then if Ha<=16528 then if Ha>8625 then if Ha<=13309 then if Ha>11775 then if Ha>12823 then kb[1]=Pa(E(kb[2],1971579984))Ha=50575 break else if true then Ha=ab[-18082]or hb(-18082,76211,5711)else Ha=ab[10830]or hb(10830,54491,21913)end end elseif Ha<=10965 then if Ha>10374 then if Ha>10432 then if Ha<=10460 then kb[3]=kb[4];if kb[3]==3 then Ha=ab[-9732]or hb(-9732,81985,64764)break elseif kb[3]==0 then Ha=ab[25882]or hb(25882,55640,55797)break elseif not(kb[3]==2)then Ha=ab[-3499]or hb(-3499,63441,50623)break else Ha=ab[31466]or hb(31466,75422,41065)break end Ha=16348 else kb[5]=nil Ha=ab[-13100]or hb(-13100,44529,17950)end else kb[2]=0;kb[6],kb[7],kb[8]=1,225,(4)+225 Ha=55106 end else kb[1]=Pa(nil);Ha=39344;end else kb[9]=ia(Ba('\254','\188'),ra,fb);fb=fb+1 Ha=ab[32753]or hb(32753,99315,54131)end elseif Ha>15977 then return kb[5]else kb[7]=kb[2];if not(kb[7]==0)then Ha=ab[13763]or hb(13763,49375,12093)break else Ha=ab[-20720]or hb(-20720,56836,28054)break end Ha=ab[24257]or hb(24257,23136,12403)end elseif Ha>4100 then if Ha>6659 then kb[9]=kb[10];kb[2]=tb(kb[2],ha(l(kb[9],127),(kb[11]-225)*7))if not(not Ga(kb[9],128))then Ha=ab[-30195]or hb(-30195,13510,599)break else Ha=ab[-16591]or hb(-16591,103336,47998)break end Ha=ab[13892]or hb(13892,7338,14907)else if true then Ha=1425 else Ha=ab[20231]or hb(20231,52896,27051)end end elseif Ha<=2448 then if Ha>1233 then if Ha<=1428 then if Ha<=1359 then kb[7]=kb[7]+kb[6];kb[11]=kb[7];if kb[7]~=kb[7]then Ha=ab[-7320]or hb(-7320,42967,16459)else Ha=51213 end else if not(Na)then Ha=ab[-18618]or hb(-18618,106946,45252)break else Ha=ab[-22265]or hb(-22265,100684,52814)break end Ha=ab[11820]or hb(11820,72421,32761)end else if not(kb[3]==1)then Ha=ab[-15276]or hb(-15276,38974,35929)break else Ha=ab[-565]or hb(-565,75768,54341)break end Ha=ab[17030]or hb(17030,24590,2985)end else kb[12]=kb[9];kb[7]=tb(kb[7],ha(l(kb[12],127),(kb[10]-48)*7))if not Ga(kb[12],128)then Ha=ab[140]or hb(140,47137,2749)break end Ha=ab[9162]or hb(9162,37596,19480)end else kb[9]=E(kb[12],14)Ha=ab[32606]or hb(32606,34044,37872)break end elseif Ha<=24343 then if Ha>20289 then if Ha>22909 then kb[1]=kb[2]Ha=ab[-16956]or hb(-16956,68522,13408)break else kb[1]=Pa(nil);Ha=10387;end elseif Ha<=16810 then if Ha<=16658 then kb[3]=ia(Ba('\14','L'),ra,fb);fb=fb+1 Ha=42131 else if true then Ha=41655 else Ha=39344 end end else kb[4]=nil;Ha=ab[17447]or hb(17447,68466,57412);end elseif Ha>31020 then if Ha>31898 then kb[8]=kb[11]Ha=1425 break else if true then Ha=ab[-17004]or hb(-17004,37154,33406)else Ha=16533 end end elseif Ha<=30242 then kb[8]=kb[8]+kb[11];kb[10]=kb[8];if kb[8]~=kb[8]then Ha=ab[-30600]or hb(-30600,55286,26900)else Ha=59583 end elseif Ha<=30522 then kb[1]=nil;Ha=ab[-31480]or hb(-31480,62281,14091);else kb[7]=0;kb[8],kb[11],kb[6]=48,1,(4)+48 Ha=ab[15721]or hb(15721,113842,42944)end elseif Ha<=49254 then if Ha<=40523 then if Ha<=36500 then if Ha>34604 then kb[2]=E(kb[7],1971579984)Ha=15606 break else kb[6]=kb[7];kb[11]=ia(Ba('K','(')..kb[6],ra,fb);fb=fb+kb[6]Ha=ab[4160]or hb(4160,40625,14233)end elseif Ha>39136 then if Ha>39262 then kb[2]=nil;Ha=ab[-10550]or hb(-10550,41406,695);elseif Ha>39206 then kb[2]=ia(Ba('\235\179','\215'),ra,fb);fb=fb+8 Ha=ab[-30954]or hb(-30954,63300,32497)else Ha=ab[-26285]or hb(-26285,85769,53673)break end else kb[1]=Pa''Ha=ab[26232]or hb(26232,58531,11497)break end elseif Ha>44522 then if Ha<=46871 then kb[12]=ia(Ba('\174','\236'),ra,fb);fb=fb+1 Ha=ab[-17017]or hb(-17017,60916,46814)elseif Ha>47142 then kb[10]=nil;Ha=ab[8]or hb(8,46579,26819);else kb[9]=nil;Ha=ab[-7799]or hb(-7799,79995,26312);end elseif Ha>41893 then kb[4]=E(kb[3],14)Ha=ab[11208]or hb(11208,79263,58665)break else kb[5]=o(kb[1][1],1,kb[1][2])Ha=ab[30016]or hb(30016,78374,55873)end elseif Ha>57457 then if Ha>62218 then if Ha>63695 then Ha=ab[31129]or hb(31129,49631,48755)break else kb[5]=kb[1]Ha=ab[-25844]or hb(-25844,66489,59590)end elseif Ha>60488 then if Ha<=60969 then Ha=41655 break elseif Ha<=61348 then if true then Ha=ab[-18094]or hb(-18094,33184,26069)else Ha=ab[32119]or hb(32119,23063,2670)end else kb[10]=kb[8];if kb[6]~=kb[6]then Ha=ab[6515]or hb(6515,56972,25134)else Ha=59583 end end else if(kb[11]>=0 and kb[8]>kb[6])or((kb[11]<0 or kb[11]~=kb[11])and kb[8]<kb[6])then Ha=ab[29242]or hb(29242,75549,31165)else Ha=ab[-15885]or hb(-15885,61314,7539)end end elseif Ha<=53315 then if Ha<=50825 then if Ha<=50318 then if Ha>50070 then kb[8]=nil;Ha=ab[7871]or hb(7871,79007,33668);else if true then Ha=ab[-4594]or hb(-4594,45351,40765)else Ha=46352 end end elseif Ha>50502 then kb[5]=o(kb[1][1],1,kb[1][2])Ha=ab[17397]or hb(17397,28043,1748)else kb[10]=E(kb[9],14)Ha=ab[-23368]or hb(-23368,19620,17061)break end elseif Ha>51401 then kb[1]=Pa(kb[8])Ha=ab[-32166]or hb(-32166,39415,5949)break else if(kb[6]>=0 and kb[7]>kb[8])or((kb[6]<0 or kb[6]~=kb[6])and kb[7]<kb[8])then Ha=ab[14831]or hb(14831,76810,56232)else Ha=47390 end end elseif Ha>55837 then if Ha>56301 then if true then Ha=50575 else Ha=10387 end else if true then Ha=ab[12233]or hb(12233,74953,60104)else Ha=ab[9922]or hb(9922,46995,28387)end end else kb[11]=kb[7];if kb[8]~=kb[8]then Ha=ab[19163]or hb(19163,56124,50526)else Ha=51213 end end end until Ha==19064 end D[17],D[18],D[4]=1,(D[10])+83,84 f=I[-26943]or y(-26943,120770,15661)end elseif f>19874 then if f>20763 then D[15]=D[17];if D[2]~=D[2]then f=I[1092]or y(1092,50879,47327)else f=I[-21278]or y(-21278,72064,1194)end else D[23]=D[21][62944];D[24],D[1]=t(D[23],30),l(t(D[23],20),1023);D[21][11251]=D[15][D[1]+1]D[21][9176]=D[24]if not(D[24]==2)then f=I[-2867]or y(-2867,75490,17413)break else f=I[5568]or y(5568,38837,56587)break end f=I[-7963]or y(-7963,91107,53402)end elseif f<=18470 then D[16]=nil;f=I[-17194]or y(-17194,124894,10882);else D[9]=D[22];f=I[-24769]or y(-24769,93596,17858);end elseif f>8734 then if f<=12433 then if f>10659 then if f>12075 then D[10]=D[11];if D[3]~=D[3]then f=I[15621]or y(15621,69830,22252)else f=32679 end elseif f>11770 then D[2]=ia(Ba('\131\246\139','\191'),ra,fb);fb=fb+4 f=I[1152]or y(1152,20263,54289)else D[21][11251]=D[15][D[21][8290]+1]f=I[2919]or y(2919,91050,53459)end elseif f<=9758 then D[5]=nil;f=I[11046]or y(11046,36332,59814);elseif f>10204 then if f<=10585 then D[21][11251]=Ka(D[21][62944],0,16)f=I[31468]or y(31468,38074,55843)else if true then f=I[-8722]or y(-8722,82193,25993)else f=59159 end end else D[4]=nil;f=I[29342]or y(29342,108175,5775);end elseif f<=14245 then if f>12648 then D[6]=E(D[7],14)f=I[-5647]or y(-5647,114917,10644)break else D[4]=E(D[18],1971579984)f=I[-11632]or y(-11632,69718,26397)break end elseif f>15497 then D[17]=E(D[2],14)f=4556 break else D[2]=ia(Ba('\132','\198'),ra,fb);fb=fb+1 f=15955 end elseif f>4743 then if f<=6811 then if f>6081 then if f>6401 then if D[16]==5 then f=I[28723]or y(28723,97371,16369)break elseif not(D[16]==9)then f=I[11398]or y(11398,97959,33959)break else f=I[26459]or y(26459,66178,5091)break end f=I[15758]or y(15758,127398,26327)else D[23]=D[16];D[18]=tb(D[18],ha(l(D[23],127),(D[15]-176)*7))if not(not Ga(D[23],128))then f=I[-164]or y(-164,57061,54510)break else f=I[-10622]or y(-10622,66500,19657)break end f=I[7198]or y(7198,79112,29003)end else D[6]=nil;f=52606;end elseif f<=7815 then D[20],D[14]=D[25],nil;f=I[21427]or y(21427,127334,11392);else if true then f=7659 else f=2418 end end elseif f<=3035 then if f>2092 then if f>2544 then if true then f=50652 else f=I[6657]or y(6657,98142,61659)end else D[20]=ia(Ba('\249','\187'),ra,fb);fb=fb+1 f=I[-30108]or y(-30108,129265,14732)end else D[4]=D[4]+D[17];D[2]=D[4];if D[4]~=D[4]then f=4127 else f=I[-22122]or y(-22122,53160,33656)end end elseif f>4098 then if f>4341 then D[2]=D[17];D[10]=tb(D[10],ha(l(D[2],127),(D[18]-131)*7))if not Ga(D[2],128)then f=I[-7369]or y(-7369,60231,52969)break end f=I[4506]or y(4506,121467,6276)else D[18],D[4],D[17]=(D[26])+36,37,1 f=I[11159]or y(11159,77605,47397)end elseif f<=3724 then D[17]=E(D[2],1103984456)f=I[-16710]or y(-16710,69112,8499)break else D[8]=D[22];D[1][62944]=D[8];ib(D[18],{})f=I[20620]or y(20620,85407,32955)end elseif f>49388 then if f<=57654 then if f<=53859 then if f<=51727 then if f>50633 then if f>50913 then D[21][11251]=D[15][D[21][65032]+1]f=I[31326]or y(31326,125350,28375)else D[18]=D[4];D[17]=v(D[18]);D[21],D[2],D[15]=(D[18])+69,70,1 f=I[-12382]or y(-12382,95383,36170)end elseif f<=50193 then D[8]=ia(Ba('\238\155\230','\210'),ra,fb);fb=fb+4 f=I[-20836]or y(-20836,124416,23034)else D[16]=E(D[23],14)f=6291 break end elseif f>52550 then if f>52972 then D[16]=D[2];if D[21]~=D[21]then f=26651 else f=I[25737]or y(25737,66529,16687)end elseif f>52662 then if true then f=I[-19336]or y(-19336,130533,6251)else f=I[-2391]or y(-2391,61499,33469)end elseif f>52618 then D[21][11251]=Ka(D[21][62944],0,1)==1 D[21][42659]=Ka(D[21][62944],31,1)==1 f=I[-22130]or y(-22130,89811,40330)elseif f>52594 then D[7]=ia(Ba('\147','\209'),ra,fb);fb=fb+1 f=I[-10051]or y(-10051,90772,1500)else if D[16]==7 then f=I[24419]or y(24419,77965,2884)break end f=I[26330]or y(26330,87991,39718)end elseif f<=52123 then D[8]=if D[9]<32768 then D[9]else D[9]-65536 f=I[20884]or y(20884,34060,32848)break elseif f>52414 then D[10]=0;D[7],D[4],D[6]=(4)+131,1,131 f=58743 else D[1][29667]=D[8]f=I[5552]or y(5552,115625,15186)end elseif f<=56042 then if f>55144 then if f<=55515 then if(D[15]>=0 and D[2]>D[21])or((D[15]<0 or D[15]~=D[15])and D[2]<D[21])then f=I[-12290]or y(-12290,64098,64304)else f=I[9876]or y(9876,75069,11148)end elseif f<=55685 then D[22],D[8]=l(t(D[23],10),1023),l(t(D[23],0),1023);D[21][45295]=D[15][D[22]+1]D[21][31839]=D[15][D[8]+1]f=I[-20126]or y(-20126,36287,49886)elseif f<=55770 then f=I[-31389]or y(-31389,45050,22428)break else if D[3]then f=I[14054]or y(14054,49005,34483)break else f=I[-14786]or y(-14786,11962,60808)break end f=I[2727]or y(2727,57479,51151)end elseif f<=54638 then D[27]=E(D[26],1971579984)f=I[-4698]or y(-4698,89038,61922)break else if not(D[16]==2)then f=I[4611]or y(4611,78557,15740)break else f=I[2828]or y(2828,11671,60120)break end f=I[4718]or y(4718,84417,36532)end elseif f<=56894 then D[2]=D[4];if D[18]~=D[18]then f=41019 else f=56948 end elseif f<=57287 then if(D[17]>=0 and D[4]>D[18])or((D[17]<0 or D[17]~=D[17])and D[4]<D[18])then f=I[20523]or y(20523,127387,14527)else f=I[31116]or y(31116,39802,52177)end elseif f<=57461 then if f>57343 then if(D[6]>=0 and D[5]>D[10])or((D[6]<0 or D[6]~=D[6])and D[5]<D[10])then f=8911 else f=55830 end else D[22]=l(t(D[23],10),1023);D[21][45295]=D[15][D[22]+1]f=I[-17064]or y(-17064,38049,56276)end else D[18]=0;D[17],D[2],D[21]=176,(4)+176,1 f=21456 end elseif f<=61696 then if f<=59646 then if f<=58667 then if f<=58344 then D[25]=nil;f=I[4982]or y(4982,29735,51162);elseif f<=58433 then if f>58390 then D[4]=D[24]f=I[13383]or y(13383,36603,45863)break else if true then f=4556 else f=15040 end end else D[6]=D[6]+D[4];D[18]=D[6];if D[6]~=D[6]then f=I[-17384]or y(-17384,43553,47841)else f=24624 end end elseif f>58951 then D[18],D[17]=D[11],nil;f=I[27806]or y(27806,52247,19301);elseif f>58806 then D[4]=D[4]+D[17];D[2]=D[4];if D[4]~=D[4]then f=I[29332]or y(29332,42954,61032)else f=I[-7902]or y(-7902,92500,59271)end else D[18]=D[6];if D[7]~=D[7]then f=I[-13917]or y(-13917,4796,53606)else f=24624 end end elseif f>60906 then if true then f=65217 else f=41268 end else D[1][17803]=l(t(D[2],8),255)D[22]=l(t(D[2],16),65535)D[1][6312]=D[22]D[8]=nil f=40162 end elseif f>63514 then if f>64386 then D[26]=D[27];D[11],D[3]=v(D[26]),false;D[10],D[6],D[5]=(D[26])+247,1,248 f=I[16630]or y(16630,51839,60895)elseif f<=63970 then D[21],D[15]=D[11][(D[2]-36)],D[6];D[16]=D[21][32991];if D[16]==0 then f=I[10195]or y(10195,45530,46729)break elseif not(D[16]==6)then f=I[29065]or y(29065,66388,16852)break else f=I[-17769]or y(-17769,90977,62052)break end f=I[-13066]or y(-13066,94008,60509)else if true then f=3807 else f=I[9006]or y(9006,46383,55444)end end else D[22]=E(D[8],1103984456)f=I[-24573]or y(-24573,37861,10729)break end elseif f>41375 then if f<=45437 then if f<=43556 then if f>42353 then D[25]=E(D[20],14)f=I[18725]or y(18725,43988,24718)break elseif f>41993 then D[17]=nil;f=I[5373]or y(5373,36261,32266);elseif f>41827 then D[23]=ia(Ba('\252','\190'),ra,fb);fb=fb+1 f=I[-3298]or y(-3298,85363,41451)else D[21][11251]=D[15][Ka(D[21][62944],0,24)+1]D[21][42659]=Ka(D[21][62944],31,1)==1 f=I[30839]or y(30839,92603,60706)end elseif f<=44669 then if f<=44119 then if f>44005 then if(D[21]>=0 and D[17]>D[2])or((D[21]<0 or D[21]~=D[21])and D[17]<D[2])then f=I[1823]or y(1823,32904,31470)else f=18292 end else D[12]=ia(Ba('\31',']'),ra,fb);fb=fb+1 f=34903 end else D[19],D[27]=D[13],nil;f=I[-15116]or y(-15116,40936,38739);end else if D[24]then f=I[-18159]or y(-18159,78060,3603)break end f=I[-4038]or y(-4038,129123,32471)end elseif f>47831 then if f<=49107 then D[2]=D[4];if D[18]~=D[18]then f=I[-6650]or y(-6650,37087,10583)else f=25993 end elseif f>49164 then if true then f=I[3128]or y(3128,40448,22198)else f=I[2546]or y(2546,116490,4872)end else D[7]=D[6];D[26]=tb(D[26],ha(l(D[7],127),(D[10]-19)*7))if not(not Ga(D[7],128))then f=I[18921]or y(18921,41028,51071)break else f=I[-9285]or y(-9285,35475,33755)break end f=I[4834]or y(4834,124478,1509)end elseif f<=46490 then if D[24]==3 then f=I[-19057]or y(-19057,79900,19071)break end f=I[16366]or y(16366,81624,48573)else D[11]=D[11]+D[5];D[10]=D[11];if D[11]~=D[11]then f=I[-17220]or y(-17220,76169,48169)else f=I[-12873]or y(-12873,88140,29050)end end elseif f>37414 then if f>39367 then if f>40576 then if f>41101 then D[26]=0;D[5],D[3],D[11]=1,(4)+19,19 f=12407 elseif f>40977 then D[4]=nil;f=I[-13743]or y(-13743,80004,45709);else f=I[284]or y(284,106760,9642)break end elseif f<=40052 then if f<=39909 then D[1][37963]=D[8]f=I[-22748]or y(-22748,57213,49310)else if true then f=49138 else f=52606 end end elseif f<=40187 then if f>40159 then D[9]=D[22];f=I[27688]or y(27688,123502,32036);else D[17]=D[17]+D[21];D[15]=D[17];if D[17]~=D[17]then f=I[-3897]or y(-3897,39901,953)else f=44099 end end else if true then f=6291 else f=I[-10523]or y(-10523,127580,10044)end end else D[21][11251]=D[15][D[21][62944]+1]f=I[-1296]or y(-1296,75708,38105)end elseif f>35156 then if f<=36480 then D[22]=nil;f=50092;elseif f<=36630 then if true then f=I[13875]or y(13875,37249,19145)else f=I[20026]or y(20026,94174,43304)end else D[3]=false f=I[-1778]or y(-1778,97818,27988)end elseif f<=34231 then if f<=33886 then if f>33580 then f=I[1844]or y(1844,37977,21577)break else if true then f=39885 else f=40162 end end elseif f<=34078 then if f>33999 then if true then f=44327 else f=23061 end else D[6][(D[2]-83)]=D[7]()f=I[2522]or y(2522,18599,60962)end else D[2]=D[17];D[21]=l(D[2],255);D[15]=ya[5513][D[21]+1];D[16],D[23],D[24]=D[15][1],D[15][2],D[15][3];D[1]={[18591]=D[21],[31839]=0,[8290]=0,[29667]=0,[62944]=0,[41294]=nil,[17803]=0,[37963]=0,[42659]=0,[45295]=0,[6312]=0,[65032]=0,[32991]=D[23],[11251]=0,[9176]=0};ib(D[18],D[1])if D[16]==10 then f=I[5017]or y(5017,79550,44282)break elseif D[16]==7 then f=I[10343]or y(10343,81872,8743)break elseif D[16]==9 then f=I[-561]or y(-561,87345,10749)break end f=45428 end elseif f<=34866 then D[21][11251]=D[15][D[21][29667]+1]f=I[-9157]or y(-9157,86778,33251)else D[14]=E(D[12],14)f=29155 break end end until f==51984 end local X=Qa()ya[59218][ub]=X return X end local _a=r[Ba('$\189\196%\189\222\53','C\216\176')]()local function ba(n,Mb)n=Za(n)local k=n local function e(Nb,Ib)local function Ea(...)return{[51960]=Oa(Ba('\186','\153'),...),[20266]={...}}end local function va(Fa,za,L)local s,x,a x,a={},function(G,O,wb)x[G]=Ya(O,39782)-Ya(wb,16988)return x[G]end s=x[-10241]or a(-10241,73689,58779)repeat while true do if s<=59060 then if s>56342 then if not(za>L)then s=x[-22415]or a(-22415,118677,15330)break else s=x[-5565]or a(-5565,26793,17351)break end s=56117 else return Fa[za],va(Fa,za+1,L)end else return end end until s==1828 end local function Xa(db,gb,aa,U)local g,Va,Da,fa Da={}g,fa={},function(P,qa,ma)g[P]=Ya(qa,20980)-Ya(ma,57217)return g[P]end Va=g[-22540]or fa(-22540,48610,43726)repeat while true do if Va>32805 then if Va<=49179 then if Va>40827 then if Va>44889 then if Va<=46862 then if Va>45437 then if Va>45748 then if not(Da[1][8290]==190)then Va=g[-27135]or fa(-27135,82590,9324)break else Va=g[-1080]or fa(-1080,66991,10173)break end Va=g[-7475]or fa(-7475,85560,18462)elseif Va<=45610 then Da[2]=aa[Da[3]];Da[3]+=1 Da[4]=Da[2][17803]if not(Da[4]==0)then Va=g[23376]or fa(23376,96514,38114)break else Va=g[23947]or fa(23947,49036,49931)break end Va=g[-19068]or fa(-19068,42780,39374)elseif Va<=45631 then Da[5],Da[6],Da[7]=Da[8];if ob(Da[5])~='function'then Va=g[4655]or fa(4655,59134,20147)break end;Va=g[-2251]or fa(-2251,89463,41026);else Da[3]+=Da[1][37963]Va=g[-4845]or fa(-4845,119941,8901)end elseif Va<=45163 then if Va>44987 then Da[9],Da[10]=Da[5](Da[6],Da[7]);Da[7]=Da[9];if Da[7]==nil then Va=51729 else Va=g[-28456]or fa(-28456,83828,3872)end else Da[5]=E(Da[1][6312],24138);Va=g[-14462]or fa(-14462,91167,22653);end elseif Va<=45284 then Da[10]=Da[10]+Da[11];Da[12]=Da[10];if Da[10]~=Da[10]then Va=g[10495]or fa(10495,41777,46361)else Va=62280 end elseif Va<=45327 then Da[13][11251]=Da[5]Da[1][18591]=229 Va=g[6525]or fa(6525,84291,20235)else db[Da[1][17803]]=Da[1][11251]Va=g[12869]or fa(12869,77700,10690)end elseif Va<=47880 then if Va<=47438 then Da[10]=Da[10]+Da[11];Da[12]=Da[10];if Da[10]~=Da[10]then Va=g[11453]or fa(11453,48656,33390)else Va=58208 end else Da[7]=Da[14]Va=g[-28924]or fa(-28924,73546,43788)break end elseif Va<=48341 then if Va>48080 then db[Da[13]+2]=db[Da[13]+3]Da[3]+=Da[1][37963]Va=g[2202]or fa(2202,85750,18772)else return va(db,Da[13],Da[13]+Da[7]-1)end elseif Va>48679 then if not(Da[15]>189)then Va=g[29440]or fa(29440,54913,40365)break else Va=g[-2454]or fa(-2454,98728,10087)break end Va=g[20204]or fa(20204,90674,29720)else Da[16]=Da[13]+Da[14]-1 Va=g[-6723]or fa(-6723,40626,54374)end elseif Va<=42864 then if Va>41929 then if Va<=42393 then if Va>42090 then Da[5][45295]=Da[7]Va=g[-27411]or fa(-27411,82042,45429)elseif Va<=42017 then if Da[15]>60 then Va=g[-5283]or fa(-5283,7164,64779)break else Va=g[8915]or fa(8915,40964,50726)break end Va=g[14328]or fa(14328,79577,129)elseif Va>42081 then if not(Da[15]>199)then Va=g[26645]or fa(26645,102828,4204)break else Va=g[-31282]or fa(-31282,86629,4739)break end Va=g[-15050]or fa(-15050,45392,34806)else if db[Da[1][17803]]then Va=g[6679]or fa(6679,98252,21534)break end Va=g[5741]or fa(5741,62631,49831)end else Da[3]+=1 Va=g[18678]or fa(18678,89079,24151)end elseif Va>41323 then if Va>41625 then Da[1][18591]=91 Da[3]+=1 Va=g[4797]or fa(4797,37403,58435)else Da[3]+=Da[1][37963]Va=g[26093]or fa(26093,120519,8327)end else ca''Va=g[-24377]or fa(-24377,78916,24443)end elseif Va<=44012 then Da[3]+=1 Va=g[-25810]or fa(-25810,75811,11819)elseif Va<=44385 then Da[13]=db[Da[1][17803]];db[Da[1][65032]]=if Da[13]then Da[13]else Da[1][11251]or false Va=g[24219]or fa(24219,80631,15703)elseif Va>44557 then if Va<=44664 then Da[3]+=1 Va=g[-7997]or fa(-7997,38012,58074)else if Da[15]>139 then Va=g[1415]or fa(1415,35575,40001)break else Va=g[13837]or fa(13837,83883,41330)break end Va=g[-14227]or fa(-14227,119340,9258)end elseif Va>44466 then Da[13]=if Da[5]<32768 then Da[5]else Da[5]-65536 Va=40354 break elseif Va<=44431 then Ua(U[20266],1,Da[5],Da[13],db)Va=g[29183]or fa(29183,80521,15569)else if Da[15]>52 then Va=g[-25547]or fa(-25547,15565,58569)break else Va=g[15537]or fa(15537,95216,21986)break end Va=g[-30628]or fa(-30628,43764,44370)end elseif Va>36625 then if Va<=38723 then if Va>37908 then if Va>38411 then Da[13],Da[5],Da[6]=E(Da[1][8290],246),E(Da[1][65032],63),E(Da[1][17803],51);Da[7],Da[9]=Da[5]==0 and Da[16]-Da[13]or Da[5]-1,db[Da[13]];Da[10]=Ea(Da[9](va(db,Da[13]+1,Da[13]+Da[7])));Da[14]=Da[10][51960];if Da[6]==0 then Va=g[6654]or fa(6654,84163,34015)break else Va=g[19297]or fa(19297,94049,39020)break end Va=50015 else if(Da[10]>=0 and Da[7]>Da[9])or((Da[10]<0 or Da[10]~=Da[10])and Da[7]<Da[9])then Va=g[-11048]or fa(-11048,68680,2574)else Va=g[-1255]or fa(-1255,43716,12017)end end elseif Va<=37360 then if Va<=37207 then if Va<=37134 then Da[13]=Eb(Da[5])if Da[13]~=nil and Da[13].__iter~=nil then Va=g[19098]or fa(19098,53242,51789)break elseif ob(Da[5])==Ba('\180\245\162\248\165','\192\148')then Va=g[11518]or fa(11518,124364,7072)break end Va=g[-26512]or fa(-26512,455,39122)elseif Va>37165 then Da[3]-=1 aa[Da[3]]={[18591]=115,[17803]=E(Da[1][17803],221),[65032]=E(Da[1][65032],109),[8290]=0}Va=g[19660]or fa(19660,120721,8633)else Da[3]+=Da[1][37963]Va=g[-22503]or fa(-22503,82135,22391)end else if Da[15]>181 then Va=g[-5657]or fa(-5657,81680,32287)break else Va=g[-5237]or fa(-5237,54569,51245)break end Va=g[14847]or fa(14847,45687,34007)end elseif Va>37496 then Da[13]=nil;Va=52905;else Da[5]=Da[9]Va=45295 break end elseif Va<=39559 then if Va>39137 then if Va>39376 then Da[5][31839]=Da[9]Va=g[579]or fa(579,67071,28400)elseif Va>39304 then Da[9]=Da[6];Va=50473;elseif Va<=39264 then if Da[15]>135 then Va=g[27650]or fa(27650,48154,62268)break else Va=g[6873]or fa(6873,36703,25133)break end Va=g[-1684]or fa(-1684,76661,11733)else Da[4]=Da[11];if Da[12]~=Da[12]then Va=g[31670]or fa(31670,10903,46379)else Va=6244 end end elseif Va>38842 then Da[3]+=1 Va=g[-15032]or fa(-15032,37212,59386)elseif Va>38790 then db[Da[1][8290]]=db[Da[1][17803]]+db[Da[1][65032]]Va=g[27846]or fa(27846,83706,20832)else if Da[1][8290]==9 then Va=g[13991]or fa(13991,60089,41172)break else Va=g[16651]or fa(16651,45404,22795)break end Va=g[-7043]or fa(-7043,73760,13862)end elseif Va<=40020 then if Va>39789 then if Da[10]==-2 then Va=g[2447]or fa(2447,6443,59926)break else Va=g[-20542]or fa(-20542,122605,4901)break end Va=g[-1596]or fa(-1596,59294,61884)else if not(Da[13]==3)then Va=g[-17619]or fa(-17619,37373,49902)break else Va=g[13124]or fa(13124,85707,39376)break end Va=g[-23647]or fa(-23647,35562,59141)end elseif Va<=40274 then if not(db[Da[1][17803]]<=db[Da[1][62944]])then Va=g[25716]or fa(25716,83805,45812)break else Va=g[15749]or fa(15749,58874,44775)break end Va=g[-30536]or fa(-30536,42047,45599)else Da[5]=Da[13];db[E(Da[1][17803],249)]=Da[5]Va=g[30550]or fa(30550,71527,25063)end elseif Va>34464 then if Va>35446 then if Va>35912 then Da[9],Da[10]=Da[5](Da[6],Da[7]);Da[7]=Da[9];if Da[7]==nil then Va=g[-21445]or fa(-21445,57850,63584)else Va=g[224]or fa(224,41271,24676)end elseif Va>35814 then if not(Da[15]>133)then Va=g[-30663]or fa(-30663,26017,60480)break else Va=g[20373]or fa(20373,85606,22984)break end Va=g[15503]or fa(15503,69367,2391)else Da[1]=aa[Da[3]]Da[15]=Da[1][18591]Va=g[15907]or fa(15907,60535,45179)end elseif Va>35000 then Da[9]=Da[9]+Da[14];Da[11]=Da[9];if Da[9]~=Da[9]then Va=g[-24088]or fa(-24088,116191,3847)else Va=26495 end elseif Va<=34871 then if true then Va=g[-14562]or fa(-14562,110704,9789)else Va=14314 end else Da[5],Da[6],Da[7]=Da[13].__iter(Da[5])Va=g[-20924]or fa(-20924,61639,18386)end elseif Va<=33671 then db[Da[1][8290]]=db[Da[1][17803]]*db[Da[1][65032]]Va=g[-9802]or fa(-9802,96861,31997)elseif Va<=34161 then if Va>33982 then Da[13],Da[5]=Da[1][17803],Da[1][11251];Da[16]=Da[13]+6 Da[6],Da[7]=db[Da[13]],nil Va=39367 else Da[13]=if Da[5]<32768 then Da[5]else Da[5]-65536 Va=g[3437]or fa(3437,49922,50588)break end elseif Va<=34353 then db[Da[1][17803]]=Da[6][Da[1][45295]][Da[1][31839]]Va=g[-369]or fa(-369,56761,63290)else if not(Da[1][8290]==63)then Va=g[-8548]or fa(-8548,77640,31126)break else Va=g[26588]or fa(26588,116836,31535)break end Va=g[10783]or fa(10783,86921,42449)end elseif Va<=57360 then if Va<=53002 then if Va>51081 then if Va>52002 then if Va>52511 then if Va<=52727 then if not db[Da[1][17803]]then Va=g[-19623]or fa(-19623,62657,52112)break end Va=g[7513]or fa(7513,72027,7939)else Da[5]=E(Da[1][6312],27736);Va=33876;end elseif Va<=52293 then if Va<=52173 then if Va>52123 then if true then Va=30937 else Va=52905 end else Da[3]+=1 Va=g[4258]or fa(4258,49468,55066)end else Da[3]+=1 Va=g[19061]or fa(19061,38800,57782)end else Da[6],Da[7]=Da[13][11251],Da[1][11251];Da[7]=Ba('@0\t*(\151\211x','\239\177\3^')..Da[7]Da[9]=''Da[14],Da[10],Da[11]=(#Da[6]-1)+236,236,1 Va=24468 end elseif Va>51414 then Da[5],Da[6],Da[7]=Da[17];if ob(Da[5])~='function'then Va=g[10041]or fa(10041,44896,45614)break end;Va=g[-19227]or fa(-19227,36475,2350);elseif Va>51176 then if Da[15]>243 then Va=g[-7137]or fa(-7137,113219,9584)break else Va=g[17495]or fa(17495,85500,15252)break end Va=g[-4807]or fa(-4807,62318,50668)elseif Va<=51134 then if Da[15]>117 then Va=g[4377]or fa(4377,9624,44164)break else Va=g[-30083]or fa(-30083,67927,34093)break end Va=g[-22112]or fa(-22112,64179,64667)else if Da[15]>196 then Va=g[-6047]or fa(-6047,119644,451)break else Va=g[19651]or fa(19651,51174,61649)break end Va=g[-16179]or fa(-16179,95358,17116)end elseif Va>50129 then if Va<=50737 then if Va<=50556 then Da[7]=K(Da[9])==Ba('\96\192\236\56r\220\237\53','\6\181\130[')Va=g[11251]or fa(11251,44788,59370)break else if true then Va=58687 else Va=61183 end end elseif Va<=50919 then if not(Da[7])then Va=g[12230]or fa(12230,48319,27550)break else Va=g[-16766]or fa(-16766,10114,33881)break end Va=g[22452]or fa(22452,68038,3972)else Da[9]=Da[9]..bb(E(N(Da[6],(Da[12]-236)+1),N(Da[7],(Da[12]-236)%#Da[7]+1)))Va=g[28365]or fa(28365,90250,42597)end elseif Va<=49671 then if Va<=49458 then if Va<=49357 then Da[7]=Da[5]-1 Va=g[-23094]or fa(-23094,36361,64329)elseif Va>49412 then db[Da[1][65032]]=db[Da[1][8290]]-db[Da[1][17803]]Va=g[-32060]or fa(-32060,61075,59579)else if true then Va=g[-27118]or fa(-27118,69763,47303)else Va=g[-10246]or fa(-10246,77509,20926)end end elseif Va>49657 then db[Da[1][17803]]=db[Da[1][65032]]Va=g[-26383]or fa(-26383,91962,28960)else if Da[15]>32 then Va=g[-23159]or fa(-23159,33549,22347)break else Va=g[11606]or fa(11606,121647,27031)break end Va=g[4437]or fa(4437,60111,60559)end elseif Va<=49933 then Ua(Da[10],1,Da[5],Da[13]+3,db)db[Da[13]+2]=db[Da[13]+3]Da[3]+=Da[1][37963]Va=g[10258]or fa(10258,50488,54046)elseif Va<=50033 then if Va<=50006 then if(Da[2]>=0 and Da[11]>Da[12])or((Da[2]<0 or Da[2]~=Da[2])and Da[11]<Da[12])then Va=g[6839]or fa(6839,67951,16921)else Va=g[8347]or fa(8347,30950,56338)end elseif Va<=50022 then Ua(Da[10][20266],1,Da[14],Da[13],db)Va=g[-7483]or fa(-7483,92533,28629)else Da[14]=Da[7];if Da[9]~=Da[9]then Va=g[-16709]or fa(-16709,39442,39992)else Va=g[19548]or fa(19548,96191,20214)end end else db[Da[1][17803]]=Da[7]Va=g[-29224]or fa(-29224,64242,64856)end elseif Va<=55049 then if Va>53924 then if Va<=54230 then if not(Da[15]>90)then Va=g[2649]or fa(2649,1003,37141)break else Va=g[-19268]or fa(-19268,55118,53914)break end Va=g[25374]or fa(25374,55986,56472)elseif Va<=54482 then if not(Da[15]>18)then Va=g[21063]or fa(21063,60644,48598)break else Va=g[-25595]or fa(-25595,46794,38330)break end Va=g[-9256]or fa(-9256,46671,32783)else if not(Da[15]>97)then Va=g[-8642]or fa(-8642,42204,39261)break else Va=g[18534]or fa(18534,92116,57583)break end Va=g[25710]or fa(25710,88428,24554)end elseif Va>53547 then Da[18]={[2]=db[Da[2][65032]],[3]=2};Da[18][1]=Da[18]Da[9][(Da[12]-7)]=Da[18]Va=g[-22771]or fa(-22771,129722,9524)else Da[13],Da[5],Da[6]=Da[1][9176],aa[Da[3]+1],nil;Va=g[23286]or fa(23286,117894,29170);end elseif Va>55952 then if Va>56471 then if Va<=56676 then if not(Da[15]>226)then Va=g[3502]or fa(3502,126403,6855)break else Va=g[26591]or fa(26591,65678,5836)break end Va=g[-8782]or fa(-8782,94447,18287)elseif Va>56734 then if Da[15]>4 then Va=g[3700]or fa(3700,49178,33173)break else Va=g[-8694]or fa(-8694,87650,59564)break end Va=g[-21836]or fa(-21836,95692,17290)else if Da[4]==1 then Va=g[-6697]or fa(-6697,67208,47318)break elseif not(Da[4]==2)then Va=g[-13213]or fa(-13213,74921,6981)break else Va=g[-12575]or fa(-12575,43659,12820)break end Va=g[-21227]or fa(-21227,58626,56284)end else Da[11]=Da[11]+Da[2];Da[4]=Da[11];if Da[11]~=Da[11]then Va=g[13598]or fa(13598,121298,4770)else Va=g[8865]or fa(8865,72684,22875)end end elseif Va<=55507 then if Va<=55309 then if Va<=55169 then if not(Da[15]>221)then Va=g[14669]or fa(14669,85386,11360)break else Va=g[-26362]or fa(-26362,59665,18174)break end Va=g[-23078]or fa(-23078,55373,56845)else db[Da[1][65032]]=v(Da[1][62944])Da[3]+=1 Va=g[31900]or fa(31900,121309,8317)end elseif Va<=55415 then if not(Da[1][8290]==7)then Va=g[30212]or fa(30212,60922,60158)break else Va=g[2607]or fa(2607,92399,10150)break end Va=g[11622]or fa(11622,40122,39584)elseif Va<=55453 then ca(Da[10])Va=g[-30329]or fa(-30329,96825,20600)else if not(Da[1][8290]==83)then Va=g[29929]or fa(29929,56932,52446)break else Va=g[-11360]or fa(-11360,91109,4217)break end Va=g[27726]or fa(27726,86610,42232)end elseif Va>55695 then Da[5][45295]=Da[7]Da[9]=nil Va=g[-18821]or fa(-18821,78858,40980)else Da[7]=nil;Va=61682;end elseif Va<=61431 then if Va>59306 then if Va<=60274 then if Va<=59759 then if not(not Da[19])then Va=g[26791]or fa(26791,43990,29464)break else Va=g[26377]or fa(26377,84818,20820)break end Va=g[-2748]or fa(-2748,87479,26939)else Da[12]=Da[10];if Da[14]~=Da[14]then Va=g[-5365]or fa(-5365,49613,55181)else Va=g[-4001]or fa(-4001,102005,13240)end end elseif Va<=60823 then if Va<=60563 then Da[5]=U[51960]Da[16]=Da[13]+Da[5]-1 Va=g[17790]or fa(17790,70180,18906)else Da[7]..=db[Da[11]]Va=g[-29491]or fa(-29491,84318,20710)end elseif Va>61065 then if Va<=61193 then if Va>61178 then Da[7],Da[9]=Da[5][11251],Da[1][11251];Da[9]=Ba('\0\232\194\155hO\24\201','\175i\200\239')..Da[9]Da[10]=''Da[12],Da[14],Da[11]=1,212,(#Da[7]-1)+212 Va=g[31773]or fa(31773,115096,29688)else db[Da[1][65032]]=db[Da[1][17803]]*Da[1][11251]Va=g[-13585]or fa(-13585,63540,65042)end else Da[3]+=1 Va=g[2785]or fa(2785,87331,41771)end else Da[13]=Ib[Da[1][65032]+1];db[Da[1][17803]]=Da[13][1][Da[13][3]]Va=g[15895]or fa(15895,73746,13880)end elseif Va>58343 then if Va<=58820 then if Va<=58521 then Da[2]=Da[14];if Da[11]~=Da[11]then Va=g[6065]or fa(6065,10718,65362)else Va=g[28029]or fa(28029,12106,50489)end elseif Va>58618 then Da[5][11251]=Da[6]if not(Da[13]==2)then Va=g[28664]or fa(28664,87580,45923)break else Va=g[-9177]or fa(-9177,126472,7953)break end Va=g[-9644]or fa(-9644,59427,51388)else Da[3]+=Da[1][37963]Va=g[32633]or fa(32633,70226,25848)end elseif Va<=59135 then if Va<=59000 then Da[10],Da[14]=Da[5][31839],Da[1][31839];Da[14]=Ba('(\176\53\239@\23\239\189','\135\49?\155')..Da[14]Da[11]=''Da[12],Da[2],Da[4]=88,(#Da[10]-1)+88,1 Va=2537 else Da[3]+=Da[1][37963]Va=g[27174]or fa(27174,57236,55730)end elseif Va>59215 then if Da[15]>209 then Va=g[-6096]or fa(-6096,29920,53439)break else Va=g[-30826]or fa(-30826,42799,38207)break end Va=g[-302]or fa(-302,93298,27352)else Da[3]+=Da[1][37963]Va=g[5243]or fa(5243,38634,57712)end elseif Va>57804 then if Va>58057 then if(Da[11]>=0 and Da[10]>Da[14])or((Da[11]<0 or Da[11]~=Da[11])and Da[10]<Da[14])then Va=g[-5091]or fa(-5091,84512,22110)else Va=51001 end else if Da[15]>141 then Va=g[-7781]or fa(-7781,130888,8006)break else Va=g[-11782]or fa(-11782,46246,29518)break end Va=g[23553]or fa(23553,94854,17604)end elseif Va>57485 then Da[5],Da[6],Da[7]=Db(Da[5])Va=g[-4810]or fa(-4810,60101,54496)else if not(Da[1][8290]==16)then Va=g[-22384]or fa(-22384,82143,33366)break else Va=g[-12299]or fa(-12299,65397,47316)break end Va=g[14447]or fa(14447,50659,54379)end elseif Va>63461 then if Va>64696 then if Va<=65202 then if Va>65071 then Da[13]=Eb(Da[5])if Da[13]~=nil and Da[13].__iter~=nil then Va=g[11559]or fa(11559,15733,47503)break elseif ob(Da[5])==Ba('\165\140\179\129\180','\209\237')then Va=g[2438]or fa(2438,85407,58377)break end Va=g[-8436]or fa(-8436,68989,29496)elseif Va<=64978 then if not(Da[15]>5)then Va=g[-28839]or fa(-28839,74332,19071)break else Va=g[-28285]or fa(-28285,87817,35407)break end Va=g[23164]or fa(23164,58899,61499)else Da[3]+=Da[1][37963]Va=g[17131]or fa(17131,35788,36234)end elseif Va<=65369 then if Va<=65283 then Da[3]+=Da[1][37963]Va=g[-9439]or fa(-9439,94523,18211)else if Da[1][8290]==2 then Va=g[-11153]or fa(-11153,57207,53115)break elseif Da[1][8290]==187 then Va=g[9028]or fa(9028,52651,22026)break else Va=g[1513]or fa(1513,10356,43476)break end Va=g[2336]or fa(2336,75968,11910)end elseif Va>65425 then Da[13],Da[5],Da[6]=Da[1][17803],Da[1][8290],Da[1][11251];Da[7]=db[Da[5]];db[Da[13]+1]=Da[7]db[Da[13]]=Da[7][Da[6]]Da[3]+=1 Va=g[14367]or fa(14367,85402,19392)else Da[7]=nil;Va=20013;end else Da[2]={[2]=db[Da[11][65032]],[3]=2};Da[2][1]=Da[2]Da[6][(Da[14]-219)]=Da[2]Va=g[17527]or fa(17527,9614,59096)end elseif Va<=62365 then if Va<=61870 then if Va<=61571 then if Va<=61503 then if Va>61468 then Da[18]=Da[2][65032];Da[20]=Da[8][Da[18]];if not(Da[20]==nil)then Va=g[-16400]or fa(-16400,96346,4079)break else Va=g[21158]or fa(21158,9783,43318)break end Va=22848 elseif Va>61461 then Da[5],Da[6],Da[7]=Db(Da[5])Va=g[14126]or fa(14126,37705,26204)else Da[11]=Da[9];if Da[10]~=Da[10]then Va=g[-25589]or fa(-25589,77217,26417)else Va=g[15288]or fa(15288,35342,44026)end end else Da[13]=nil;Va=g[1627]or fa(1627,98066,41150);end elseif Va>61660 then Da[9],Da[10]=Da[5][45295],Da[1][45295];Da[10]=Ba('\226\208\\f\138w\134\52','MQV\18')..Da[10]Da[14]=''Da[2],Da[12],Da[11]=1,(#Da[9]-1)+52,52 Va=g[8095]or fa(8095,62476,38591)else Da[13]=nil;Va=g[28180]or fa(28180,58914,27812);end else if(Da[11]>=0 and Da[10]>Da[14])or((Da[11]<0 or Da[11]~=Da[11])and Da[10]<Da[14])then Va=g[-9756]or fa(-9756,97887,30975)else Va=g[27654]or fa(27654,83688,47753)end end elseif Va>62937 then if Va<=63207 then if Va<=63149 then Da[14]=Da[6]-1 Va=g[29770]or fa(29770,75111,28341)else Da[13]=Da[1][11251];db[Da[1][8290]]=_a[Da[13]]or ya[16518][Da[13]]Da[3]+=1 Va=g[-11847]or fa(-11847,34677,37333)end elseif Va>63243 then if not(Da[15]>65)then Va=g[11162]or fa(11162,59322,44092)break else Va=g[30976]or fa(30976,87180,41674)break end Va=g[8185]or fa(8185,95072,17894)else Da[13],Da[5],Da[6]=Da[1][8290],Da[1][17803],Da[1][65032]-1;if not(Da[6]==-1)then Va=g[12649]or fa(12649,50373,63839)break else Va=g[32496]or fa(32496,47355,30141)break end Va=28243 end elseif Va>62733 then if Va>62826 then db[Da[1][17803]]=Da[1][8290]==1 Da[3]+=Da[1][65032]Va=g[-5354]or fa(-5354,47889,48441)else Da[13],Da[5]=aa[Da[3]],nil;Va=52469;end elseif Va>62647 then Da[3]-=1 aa[Da[3]]={[18591]=143,[17803]=E(Da[1][17803],70),[65032]=E(Da[1][65032],103),[8290]=0}Va=g[-10465]or fa(-10465,57671,63239)elseif Va<=62620 then _a[Da[1][11251]]=db[Da[1][8290]]Da[3]+=1 Va=g[338]or fa(338,75041,13097)else db[Da[1][8290]]=db[Da[1][17803]]+Da[1][11251]Va=g[27276]or fa(27276,82897,22137)end elseif Va<=16142 then if Va<=8115 then if Va>4093 then if Va>6159 then if Va>7141 then if Da[15]>236 then Va=g[-26586]or fa(-26586,92271,44774)break else Va=g[-17439]or fa(-17439,98613,11298)break end Va=g[24546]or fa(24546,61364,59794)elseif Va>6529 then if Va>6700 then Da[9]={Da[6](db[Da[13]+1],db[Da[13]+2])};Ua(Da[9],1,Da[5],Da[13]+3,db)if not(db[Da[13]+3]~=nil)then Va=g[-25182]or fa(-25182,115701,6637)break else Va=g[30699]or fa(30699,122333,4159)break end Va=g[3260]or fa(3260,57747,63419)else if true then Va=42233 else Va=g[6678]or fa(6678,48826,32416)end end else if(Da[2]>=0 and Da[11]>Da[12])or((Da[2]<0 or Da[2]~=Da[2])and Da[11]<Da[12])then Va=g[-14025]or fa(-14025,10365,46929)else Va=g[2671]or fa(2671,51328,46283)end end elseif Va>5147 then if Va>5801 then if Da[1][8290]==217 then Va=g[11111]or fa(11111,11362,37623)break else Va=g[-16194]or fa(-16194,81632,29339)break end Va=g[12015]or fa(12015,46140,33306)else Da[13],Da[5]=Da[1][9176],Da[1][11251];Da[6]=_a[Da[5]]or ya[16518][Da[5]];if not(Da[13]==1)then Va=g[-14611]or fa(-14611,27134,57032)break else Va=g[2769]or fa(2769,84240,10040)break end Va=25490 end elseif Va>4633 then if Va<=4867 then if Va>4784 then Da[3]-=1 aa[Da[3]]={[18591]=139,[17803]=E(Da[1][17803],8),[65032]=E(Da[1][65032],71),[8290]=0}Va=g[9201]or fa(9201,90271,30399)else if not(Da[15]>10)then Va=g[26503]or fa(26503,108297,10357)break else Va=g[18000]or fa(18000,41866,32467)break end Va=g[-13996]or fa(-13996,60670,60252)end elseif Va>4950 then Da[9]=Da[11]Va=g[-11997]or fa(-11997,73741,2083)break elseif Va>4925 then Da[17][Da[1]]=nil Da[3]+=1 Va=g[-2804]or fa(-2804,65116,63738)else Da[13]=K(Da[5])==Ba('\148!\195r\134=\194\127','\242T\173\17')Va=9700 break end elseif Va>4450 then if Da[15]>61 then Va=g[24857]or fa(24857,96553,35217)break else Va=g[11450]or fa(11450,90535,45531)break end Va=g[24819]or fa(24819,71179,24659)else Da[7]=Da[14]Va=g[-29768]or fa(-29768,77483,1511)break end elseif Va>1855 then if Va>2808 then if Va<=3381 then if Da[15]>212 then Va=g[917]or fa(917,72688,38351)break else Va=g[-11843]or fa(-11843,48032,28897)break end Va=g[-14947]or fa(-14947,59516,61146)else Da[9][(Da[12]-7)]=Ib[Da[2][65032]+1]Va=g[11231]or fa(11231,117462,13576)end elseif Va<=2295 then if Va<=2163 then if Va>2091 then if(Da[4]>=0 and Da[12]>Da[2])or((Da[4]<0 or Da[4]~=Da[4])and Da[12]<Da[2])then Va=g[-10192]or fa(-10192,7410,58893)else Va=g[-1879]or fa(-1879,57051,47856)end else Da[13]=K(Da[5])==Ba('\21\173\174\134\a\177\175\139','s\216\192\229')Va=13099 break end else Da[9],Da[10]=Da[5](Da[6],Da[7]);Da[7]=Da[9];if Da[7]==nil then Va=29784 else Va=g[17171]or fa(17171,97882,1946)end end elseif Va>2516 then Da[18]=Da[12];if Da[2]~=Da[2]then Va=g[-23440]or fa(-23440,552,40931)else Va=g[-23991]or fa(-23991,63108,16545)end elseif Va>2498 then Da[13]=db[Da[1][17803]];db[Da[1][65032]]=if Da[13]then Da[13]else db[Da[1][8290]]or false Va=g[19688]or fa(19688,44060,43578)else Da[11]=aa[Da[3]];Da[3]+=1 Da[12]=Da[11][17803]if not(Da[12]==0)then Va=g[19826]or fa(19826,88183,27500)break else Va=g[10854]or fa(10854,119655,22360)break end Va=g[16496]or fa(16496,16270,60632)end elseif Va<=989 then if Va<=527 then if Va<=253 then if not(Da[15]>131)then Va=g[-25445]or fa(-25445,77230,10419)break else Va=g[24525]or fa(24525,61245,26659)break end Va=g[-4943]or fa(-4943,80820,15762)elseif Va>313 then if not(db[Da[1][17803]]<=db[Da[1][62944]])then Va=g[10651]or fa(10651,121013,32184)break else Va=g[14956]or fa(14956,85673,36057)break end Va=g[-6640]or fa(-6640,44558,43084)else Da[20]={[3]=Da[18],[1]=db}Da[8][Da[18]]=Da[20]Va=g[-12255]or fa(-12255,39610,44431)end elseif Va>859 then if Da[15]>75 then Va=g[-1974]or fa(-1974,58061,39026)break else Va=g[20265]or fa(20265,85113,15693)break end Va=g[2047]or fa(2047,87256,41854)else Da[13],Da[5]=Da[1][17803],Da[1][65032]-1;if not(Da[5]==-1)then Va=g[-31477]or fa(-31477,119470,2660)break else Va=g[-21498]or fa(-21498,128068,26143)break end Va=44405 end elseif Va<=1516 then Da[5]=db[Da[1][17803]];Va=g[-23789]or fa(-23789,10418,44737);elseif Va<=1741 then if Va>1688 then Da[5],Da[6],Da[7]=Db(Da[5])Va=g[-27325]or fa(-27325,52632,53293)else Da[5],Da[6],Da[7]=Da[13].__iter(Da[5])Va=g[-22113]or fa(-22113,78537,27884)end else Da[13]=Ib[Da[1][65032]+1];Da[13][1][Da[13][3]]=db[Da[1][17803]]Va=g[-23097]or fa(-23097,46706,32984)end elseif Va>12159 then if Va>14201 then if Va>15198 then if Va>15717 then Da[6]=Da[16]-Da[5]+1 Va=g[-29877]or fa(-29877,56763,49789)elseif Va<=15495 then if Va<=15352 then Da[3]-=1 aa[Da[3]]={[18591]=9,[17803]=E(Da[1][17803],2),[65032]=E(Da[1][65032],43),[8290]=0}Va=g[-15315]or fa(-15315,44709,43173)else ca''Va=g[-28368]or fa(-28368,67676,14188)end else Da[7]=Da[16]-Da[13]+1 Va=g[-25850]or fa(-25850,70691,21795)end elseif Va<=14735 then if Va<=14488 then if Va<=14390 then if Va<=14318 then Da[5],Da[6],Da[7]=Da[8];if ob(Da[5])~='function'then Va=g[-9682]or fa(-9682,122644,20401)break end;Va=g[7013]or fa(7013,93297,21044);else if not(Da[15]>238)then Va=g[-30379]or fa(-30379,65193,34043)break else Va=g[-32713]or fa(-32713,63303,61604)break end Va=g[5613]or fa(5613,63076,49378)end else if Da[15]>140 then Va=g[18125]or fa(18125,93870,21149)break else Va=g[2338]or fa(2338,86839,35743)break end Va=g[-27295]or fa(-27295,94499,18219)end elseif Va<=14649 then Da[9],Da[10]=ga(Da[17][Da[1]],Da[6],db[Da[13]+1],db[Da[13]+2]);if not(not Da[9])then Va=g[11632]or fa(11632,36154,40827)break else Va=g[-24452]or fa(-24452,100790,8236)break end Va=39892 else if not(db[Da[1][17803]]==db[Da[1][62944]])then Va=g[4309]or fa(4309,61942,41641)break else Va=g[-9019]or fa(-9019,83409,61980)break end Va=g[21877]or fa(21877,94573,18413)end elseif Va<=15073 then if Va>15015 then if Da[15]>68 then Va=g[-2411]or fa(-2411,63695,42941)break else Va=g[-27908]or fa(-27908,68295,48012)break end Va=g[-11527]or fa(-11527,75989,12149)else Da[13]=gb[Da[1][11251]+1];Da[5]=Da[13][41758];Da[6]=v(Da[5]);db[Da[1][17803]]=e(Da[13],Da[6])Da[7],Da[9],Da[10]=220,(Da[5])+219,1 Va=50030 end elseif Va>15124 then if Va<=15147 then Da[7]=Da[7]+Da[10];Da[14]=Da[7];if Da[7]~=Da[7]then Va=g[-14342]or fa(-14342,82619,21667)else Va=38100 end else db[Da[1][17803]]=not db[Da[1][65032]]Va=g[32033]or fa(32033,89219,23243)end else if not(Da[15]>208)then Va=g[25212]or fa(25212,59475,21680)break else Va=g[2484]or fa(2484,85534,59349)break end Va=g[3775]or fa(3775,48659,47163)end elseif Va<=13168 then if Va>12709 then if Va<=12942 then if Va<=12792 then Da[13]=Da[1][11251];db[Da[1][65032]]=db[Da[1][8290]][Da[13]]Da[3]+=1 Va=g[-17298]or fa(-17298,57567,63359)else Da[10]=Da[10]..bb(E(N(Da[7],(Da[2]-212)+1),N(Da[9],(Da[2]-212)%#Da[9]+1)))Va=g[-15698]or fa(-15698,35782,18659)end elseif Va>13079 then if not(not Da[13])then Va=g[20971]or fa(20971,47753,42307)break else Va=g[-9162]or fa(-9162,38872,21938)break end Va=g[10325]or fa(10325,42386,23594)else if not(Da[15]>59)then Va=g[-22717]or fa(-22717,107499,8977)break else Va=g[-19627]or fa(-19627,40408,63441)break end Va=g[-1437]or fa(-1437,84187,20099)end elseif Va<=12431 then Da[3]-=1 aa[Da[3]]={[18591]=49,[17803]=E(Da[1][17803],215),[65032]=E(Da[1][65032],121),[8290]=0}Va=g[31425]or fa(31425,44056,43582)elseif Va<=12526 then if not(Da[10][3]>=Da[1][17803])then Va=g[-67]or fa(-67,65743,7162)break else Va=g[9984]or fa(9984,38809,45616)break end Va=g[-19263]or fa(-19263,32926,39723)else if Da[15]>71 then Va=g[-22403]or fa(-22403,68136,14478)break else Va=g[-3431]or fa(-3431,39819,42349)break end Va=g[23754]or fa(23754,70866,25464)end elseif Va<=13645 then Da[13],Da[5],Da[6]=Da[1][11251],Da[1][42659],db[Da[1][17803]];if not((Da[6]==Da[13])~=Da[5])then Va=g[-30854]or fa(-30854,93549,37629)break else Va=g[30309]or fa(30309,11512,35561)break end Va=g[-9074]or fa(-9074,72601,7617)elseif Va<=13917 then if true then Va=50837 else Va=g[-18332]or fa(-18332,78565,5835)end elseif Va>13992 then if not(Da[13]==2)then Va=g[28724]or fa(28724,83736,7604)break else Va=g[21227]or fa(21227,88337,15522)break end Va=g[9320]or fa(9320,51228,59863)else Da[13]=Da[1][11251];db[Da[1][65032]][Da[13]]=db[Da[1][8290]]Da[3]+=1 Va=g[31004]or fa(31004,36609,35145)end elseif Va<=10064 then if Va<=9060 then if Va<=8578 then if Va<=8341 then db[Da[1][17803]]=Da[6]Va=g[28389]or fa(28389,10385,51794)else db[Da[1][17803]]=db[Da[1][8290]][db[Da[1][65032]]]Va=g[29224]or fa(29224,63439,49551)end else Da[3]+=1 Va=g[-6670]or fa(-6670,80674,15656)end elseif Va>9742 then if not(Da[15]>143)then Va=g[17270]or fa(17270,79394,23077)break else Va=g[-5126]or fa(-5126,60806,24165)break end Va=g[-15860]or fa(-15860,84601,19681)elseif Va<=9649 then Da[14]=Da[14]..bb(E(N(Da[9],(Da[4]-52)+1),N(Da[10],(Da[4]-52)%#Da[10]+1)))Va=g[9703]or fa(9703,65697,43601)elseif Va>9683 then if Va>9694 then if not Da[13]then Va=g[-13591]or fa(-13591,75068,2829)break end Va=58550 else Da[13]=Eb(Da[5])if Da[13]~=nil and Da[13].__iter~=nil then Va=g[10542]or fa(10542,35506,42840)break elseif ob(Da[5])==Ba('x+n&i','\fJ')then Va=g[309]or fa(309,35487,2863)break end Va=g[-32544]or fa(-32544,49256,56157)end else db[Da[1][17803]]=Da[6][Da[1][45295]]Va=g[26518]or fa(26518,41507,20420)end elseif Va<=11002 then if Va>10398 then Da[11]=Da[11]..bb(E(N(Da[10],(Da[18]-88)+1),N(Da[14],(Da[18]-88)%#Da[14]+1)))Va=g[1743]or fa(1743,37064,45804)elseif Va<=10253 then if Va>10129 then Da[3]+=Da[1][37963]Va=g[5138]or fa(5138,67511,4503)else if not(Da[1][8290]==4)then Va=g[28161]or fa(28161,115290,27895)break else Va=g[31629]or fa(31629,77337,12599)break end Va=g[22630]or fa(22630,86115,42731)end else if Da[15]>205 then Va=g[1367]or fa(1367,56677,24464)break else Va=g[13465]or fa(13465,80693,32097)break end Va=g[-6945]or fa(-6945,72663,7799)end elseif Va<=11856 then Da[14]=Da[14]..bb(E(N(Da[9],(Da[4]-236)+1),N(Da[10],(Da[4]-236)%#Da[10]+1)))Va=g[13828]or fa(13828,59948,40452)else if Da[15]>207 then Va=g[19417]or fa(19417,66136,35630)break else Va=g[-6570]or fa(-6570,19751,52367)break end Va=g[19635]or fa(19635,86735,42127)end elseif Va<=24382 then if Va>20183 then if Va>22054 then if Va<=23048 then if Va>22603 then if Va<=22782 then Da[10][2]=Da[10][1][Da[10][3]]Da[10][1]=Da[10]Da[10][3]=2 Da[8][Da[9]]=nil Va=g[4117]or fa(4117,85068,20345)else Da[9][(Da[12]-7)]=Da[20]Va=g[-2701]or fa(-2701,90798,23872)end elseif Va<=22389 then Da[6]=Da[10]Va=g[8298]or fa(8298,70275,33209)break else Y(Da[10])Da[17][Da[9]]=nil Va=g[30241]or fa(30241,23723,56318)end elseif Va<=23404 then if Va>23147 then if not(Da[15]>7)then Va=g[-13068]or fa(-13068,71427,38600)break else Va=g[-13472]or fa(-13472,19256,55233)break end Va=g[356]or fa(356,36029,35485)else Da[13],Da[5]=Da[1][17803],Da[1][65032];Da[6]=Da[5]-1;if Da[6]==-1 then Va=g[30288]or fa(30288,85218,126)break else Va=g[-25900]or fa(-25900,130903,12728)break end Va=g[-15440]or fa(-15440,85065,48393)end elseif Va>23660 then Da[4]=Da[11];if Da[12]~=Da[12]then Va=g[20342]or fa(20342,118890,6426)else Va=49982 end else Da[3]-=1 aa[Da[3]]={[18591]=171,[17803]=E(Da[1][17803],17),[65032]=E(Da[1][65032],104),[8290]=0}Va=g[-22402]or fa(-22402,74271,13375)end elseif Va<=21029 then if Va>20575 then if not(db[Da[1][17803]]<db[Da[1][62944]])then Va=g[14814]or fa(14814,52591,60491)break else Va=g[21806]or fa(21806,40621,63362)break end Va=g[32515]or fa(32515,86636,42218)else Da[13],Da[5],Da[6]=Da[1][11251],Da[1][42659],db[Da[1][17803]];if(Da[6]==Da[13])~=Da[5]then Va=g[28310]or fa(28310,71932,18761)break else Va=g[16716]or fa(16716,81482,2103)break end Va=g[8746]or fa(8746,78680,1534)end elseif Va<=21571 then if Va>21465 then db[Da[1][8290]][db[Da[1][65032]]]=db[Da[1][17803]]Va=g[-25444]or fa(-25444,68836,2914)else Da[12]=Da[12]+Da[4];Da[18]=Da[12];if Da[12]~=Da[12]then Va=g[-30242]or fa(-30242,20313,54450)else Va=g[18555]or fa(18555,37919,25114)end end elseif Va<=21670 then if Da[12]==2 then Va=g[30870]or fa(30870,57959,47400)break end Va=g[-29144]or fa(-29144,57515,43455)else if Da[13]==3 then Va=g[6563]or fa(6563,91751,28222)break end Va=g[30404]or fa(30404,58086,36865)end elseif Va>18320 then if Va>19419 then if Va<=19851 then if Va<=19769 then Da[6][(Da[14]-219)]=Ib[Da[11][65032]+1]Va=g[8676]or fa(8676,58764,42710)else Da[19]=false Da[3]+=1 if not(Da[15]>126)then Va=g[-23753]or fa(-23753,15259,34786)break else Va=g[24239]or fa(24239,32780,52227)break end Va=g[7297]or fa(7297,86888,42478)end else Da[9],Da[10]=Da[5][45295],Da[1][45295];Da[10]=Ba('\129{{\186\233\220\161\232','.\250q\206')..Da[10]Da[14]=''Da[11],Da[12],Da[2]=236,(#Da[9]-1)+236,1 Va=39287 end elseif Va>19024 then if not(Da[15]>116)then Va=g[-28199]or fa(-28199,55718,37532)break else Va=g[19320]or fa(19320,87259,57874)break end Va=g[20128]or fa(20128,63760,65334)elseif Va>18908 then if Da[15]>56 then Va=g[-30281]or fa(-30281,33772,16533)break else Va=g[-6766]or fa(-6766,67123,30111)break end Va=g[-1347]or fa(-1347,41091,46795)else if true then Va=g[-8788]or fa(-8788,116933,8539)else Va=g[-603]or fa(-603,88481,65133)end end elseif Va<=17424 then if Va>17009 then if Va<=17216 then if Va<=17072 then if Va>17052 then Da[3]+=Da[1][37963]Va=g[13850]or fa(13850,37305,59297)else Da[13]=Da[1][42659];if(db[Da[1][17803]]==nil)~=Da[13]then Va=g[-8996]or fa(-8996,53020,60083)break else Va=g[-1394]or fa(-1394,41423,44068)break end Va=g[13590]or fa(13590,60626,60280)end else Da[14]=Da[14]+Da[12];Da[2]=Da[14];if Da[14]~=Da[14]then Va=g[-3335]or fa(-3335,71076,13176)else Va=25606 end end else Da[5]=db[Da[1][17803]];Va=4915;end elseif Va<=16657 then Da[3]-=1 aa[Da[3]]={[18591]=61,[17803]=E(Da[1][17803],105),[65032]=E(Da[1][65032],95),[8290]=0}Va=g[-8681]or fa(-8681,46221,33485)else if true then Va=g[20795]or fa(20795,35672,63036)else Va=52469 end end elseif Va>17978 then if Va<=18155 then Da[7]=db[Da[13]]Da[9],Da[14],Da[10]=Da[13]+1,1,Da[5]Va=61460 else Da[3]-=1 aa[Da[3]]={[18591]=141,[17803]=E(Da[1][17803],62),[65032]=E(Da[1][65032],125),[8290]=0}Va=g[31960]or fa(31960,70311,25767)end elseif Va<=17812 then if Da[15]>159 then Va=g[8816]or fa(8816,47784,34323)break else Va=g[-2313]or fa(-2313,67166,11266)break end Va=g[-32207]or fa(-32207,62601,49873)else Da[10][2]=Da[10][1][Da[10][3]]Da[10][1]=Da[10]Da[10][3]=2 Da[8][Da[9]]=nil Va=g[27612]or fa(27612,88226,34311)end elseif Va>28302 then if Va<=30498 then if Va<=29633 then if Va>28899 then if true then Va=13099 else Va=g[-3735]or fa(-3735,5867,40431)end else Da[3]+=Da[1][37963]Va=g[2635]or fa(2635,36676,35074)end elseif Va>30036 then Da[16],Da[3],Da[8],Da[17],Da[19]=-1,1,eb({},{[Ba('\205rS\253I[','\146->')]=Ba('?:','I')}),eb({},{[Ba('\"\156\159\18\167\151','}\195\242')]=Ba('\225\249','\138')}),false;Va=g[4878]or fa(4878,70439,25895);elseif Va>29783 then if Va<=29842 then Va=g[26908]or fa(26908,100681,11890);break;else if Da[15]>72 then Va=g[24313]or fa(24313,82837,64749)break else Va=g[-5660]or fa(-5660,93641,38960)break end Va=g[-17756]or fa(-17756,94777,17441)end else if true then Va=9700 else Va=17391 end end elseif Va<=31371 then if Va<=30960 then if Va>30771 then Da[5]=Da[13];Da[6]=gb[Da[5]+1];Da[7]=Da[6][41758];Da[9]=v(Da[7]);db[E(Da[1][17803],91)]=e(Da[6],Da[9])Da[11],Da[10],Da[14]=1,8,(Da[7])+7 Va=g[-29098]or fa(-29098,97499,40344)elseif Va<=30657 then Da[13]=nil;Va=g[11876]or fa(11876,34246,20418);else Da[13],Da[5]=Da[1][8290],Da[1][65032];Da[6],Da[7]=Z(mb,db,'',Da[13],Da[5]);if not Da[6]then Va=g[31600]or fa(31600,96053,16278)break end Va=50085 end elseif Va>31225 then Da[11]=Da[11]+Da[2];Da[4]=Da[11];if Da[11]~=Da[11]then Va=g[-21735]or fa(-21735,60796,29774)else Va=6244 end else if not(Da[15]>104)then Va=g[-4114]or fa(-4114,80955,18289)break else Va=g[30164]or fa(30164,75737,9939)break end Va=g[12647]or fa(12647,52828,51450)end elseif Va<=31965 then if Va>31878 then if Va>31928 then if not(Da[15]>112)then Va=g[3462]or fa(3462,92067,20090)break else Va=g[4931]or fa(4931,91238,13818)break end Va=g[-25845]or fa(-25845,91867,28803)else Da[3]+=1 Va=g[-5332]or fa(-5332,59326,61852)end else db[Da[1][17803]]=nil Va=g[10205]or fa(10205,51102,53692)end elseif Va>32077 then Da[3]-=1 aa[Da[3]]={[18591]=60,[17803]=E(Da[1][17803],148),[65032]=E(Da[1][65032],73),[8290]=0}Va=g[-12732]or fa(-12732,46138,33312)else if Da[15]>180 then Va=g[-16916]or fa(-16916,54817,55508)break else Va=g[8454]or fa(8454,123607,1047)break end Va=g[4664]or fa(4664,42076,45818)end elseif Va<=26355 then if Va>25387 then if Va<=25898 then if Va>25564 then if Va<=25622 then if(Da[12]>=0 and Da[14]>Da[11])or((Da[12]<0 or Da[12]~=Da[12])and Da[14]<Da[11])then Va=g[-27340]or fa(-27340,83184,25132)else Va=g[-9767]or fa(-9767,83972,14448)end else if Da[15]>138 then Va=g[-4942]or fa(-4942,44207,2367)break else Va=g[-1972]or fa(-1972,82834,23018)break end Va=g[-4490]or fa(-4490,72053,8149)end else Da[3]+=1 Va=g[-21860]or fa(-21860,92331,28339)end else if Da[15]>194 then Va=g[-27586]or fa(-27586,65190,43405)break else Va=g[22818]or fa(22818,78070,4487)break end Va=g[16531]or fa(16531,60540,60122)end elseif Va>24832 then if Va<=25155 then Da[3]-=1 aa[Da[3]]={[18591]=132,[17803]=E(Da[1][17803],62),[65032]=E(Da[1][65032],44),[8290]=0}Va=g[20276]or fa(20276,61422,60012)else Da[5],Da[6],Da[7]=Da[13].__iter(Da[5])Va=g[11328]or fa(11328,33071,39834)end else Da[12]=Da[10];if Da[14]~=Da[14]then Va=g[31800]or fa(31800,80426,1640)else Va=58208 end end elseif Va<=27369 then if Va<=26903 then if Va>26664 then Da[3]+=Da[1][37963]Va=g[-29644]or fa(-29644,41083,46819)else if(Da[14]>=0 and Da[9]>Da[10])or((Da[14]<0 or Da[14]~=Da[14])and Da[9]<Da[10])then Va=g[-9346]or fa(-9346,129303,15039)else Va=g[-22197]or fa(-22197,87749,50588)end end elseif Va>27186 then if true then Va=40354 else Va=44967 end else Da[3]+=Da[1][37963]Va=g[-2199]or fa(-2199,75140,13250)end elseif Va>27852 then if Va>28098 then Ua(db,Da[5],Da[5]+Da[6]-1,Da[1][62944],db[Da[13]])Da[3]+=1 Va=g[-2028]or fa(-2028,46210,33480)else if not(Da[15]>177)then Va=g[22061]or fa(22061,121434,18921)break else Va=g[-17852]or fa(-17852,48839,44448)break end Va=g[8327]or fa(8327,40980,46642)end else if Da[15]>84 then Va=g[-26792]or fa(-26792,71408,4241)break else Va=g[9600]or fa(9600,69192,46222)break end Va=g[-28015]or fa(-28015,62701,50029)end end until Va==59082 end local oa oa={}oa[1]=function(...)local qb,pb,sb,Kb pb={}sb,Kb={},function(W,La,wa)sb[W]=Ya(La,31635)-Ya(wa,53719)return sb[W]end qb=sb[-21883]or Kb(-21883,129766,27800)repeat while true do if qb>32448 then if qb<=53140 then if qb<=48138 then return ca(pb[1],0)elseif qb<=51000 then pb[2],pb[3],pb[4]=na(...),v(Nb[17148]),{[51960]=0,[20266]={}};Ua(pb[2],1,Nb[13142],0,pb[3])if Nb[13142]<pb[2][Ba('\252','\146')]then qb=sb[15564]or Kb(15564,33148,2330)break end qb=sb[-29028]or Kb(-29028,6289,39069)else pb[1],pb[5]=pb[6][20266][2],nil;qb=61791;end elseif qb>59035 then pb[7]=pb[1];qb=6542;else qb=sb[-30033]or Kb(-30033,93410,17329);break;end elseif qb>17284 then if qb>24558 then if pb[5]==false then qb=sb[2630]or Kb(2630,5973,34751)break end qb=44489 else if true then qb=31463 else qb=sb[17653]or Kb(17653,68728,22363)end end elseif qb>5922 then if qb<=7640 then if qb>6563 then pb[6]=Ea(Z(Xa,pb[3],Nb[5791],Nb[46741],pb[4]));if not(pb[6][20266][1])then qb=sb[-9688]or Kb(-9688,111611,12234)break else qb=sb[-17387]or Kb(-17387,25433,56703)break end qb=sb[-28388]or Kb(-28388,97176,62948)else pb[5]=K(pb[7])==Ba('\249\158\178\227\132\167','\138\234\192')qb=sb[10501]or Kb(10501,70863,9634)break end else pb[6],pb[1]=Nb[13142]+1,pb[2][Ba('Z','4')]-Nb[13142];pb[4][51960]=pb[1];Ua(pb[2],pb[6],pb[6]+pb[1]-1,1,pb[4][20266])qb=sb[-28429]or Kb(-28429,12049,60189)end elseif qb<=4416 then return va(pb[6][20266],2,pb[6][51960])else pb[1]=K(pb[1])qb=sb[-8445]or Kb(-8445,72848,26861)end end until qb==34059 end return oa[1]end return e(n,Mb)end local C C,Bb={[0]=0},function()C[0]=C[0]+1 return{[3]=C[0],[1]=C}end xa=ba return(function()return xa(vb(B''),{})end)()(...)
